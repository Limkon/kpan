<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>上傳文件 - 網路硬碟</title>
    <link rel="stylesheet" href="/style.css">
    <style>
        /* Styles specific to upload page can go here or be integrated into style.css */
        .upload-container {
            margin-top: 20px;
        }
        #drop-area { /* Copied from files.ejs for consistency, can be centralized in style.css */
            border: 2px dashed #adb5bd;
            border-radius: 6px;
            padding: 35px;
            text-align: center;
            margin-bottom: 25px;
            background-color: #f8f9fa;
            transition: background-color 0.2s ease, border-color 0.2s ease;
        }
        #drop-area.highlight {
            border-color: #007bff;
            background-color: #e9f5ff;
        }
        #drop-area p { margin: 0 0 10px 0; color: #495057; font-size: 0.95em; }
        #drop-area label { color: #007bff; cursor: pointer; text-decoration: underline; font-weight: 500; }
        #upload-button-standalone { /* Different ID for standalone page button if needed */
            margin-top: 12px;
        }
        #file-list-preview ul { list-style-type: disc; padding-left: 20px; margin-top: 10px; }
        #file-list-preview li { font-size: 0.85em; color: #343a40; }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>
                上傳到: <%= currentPathDisplay %>
                <% if (locals.viewTargetUsername && user.role === 'admin') { %>
                    (用戶: <%= viewTargetUsername %>)
                <% } %>
            </h1>
            <nav>
                <%
                    let backPath = "/files";
                    if (locals.viewTargetUsername && user.role === 'admin') {
                        backPath = `/files?path=${encodeURIComponent(currentPath)}&targetUsername=${encodeURIComponent(viewTargetUsername)}`;
                    } else {
                        backPath = `/files?path=${encodeURIComponent(currentPath)}`;
                    }
                %>
                <a href="<%= backPath %>">返回文件列表</a>
                <a href="/logout">登出</a>
            </nav>
        </header>

        <% if (locals.message) { %>
            <p class="message <%= (locals.messageType === 'error') ? 'error-message' : '' %>"><%= message %></p>
        <% } %>

        <div class="upload-container">
            <div id="drop-area">
                <form id="upload-form" action="/upload" method="POST" enctype="multipart/form-data">
                    <input type="hidden" name="currentPath" value="<%= currentPath %>">
                    <% if (locals.viewTargetUsername && user.role === 'admin') { %>
                        <input type="hidden" name="targetUsername" value="<%= viewTargetUsername %>">
                    <% } %>
                    <input type="file" id="userFiles" name="userFiles" multiple style="display: none;">
                    <p>將文件拖拽到此處，或 <label for="userFiles">點擊選擇文件</label></p>
                    <button type="submit" id="upload-button-standalone">上傳已選文件</button>
                </form>
                <div id="file-list-preview" style="margin-top:10px; text-align:left;"></div>
            </div>
        </div>
    </div>

    <script>
        const dropArea = document.getElementById('drop-area');
        const fileInput = document.getElementById('userFiles');
        const uploadForm = document.getElementById('upload-form');
        const fileListPreview = document.getElementById('file-list-preview');
        const uploadButton = document.getElementById('upload-button-standalone');

        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, preventDefaults, false);
            document.body.addEventListener(eventName, preventDefaults, false);
        });
        function preventDefaults(e) { e.preventDefault(); e.stopPropagation(); }

        ['dragenter', 'dragover'].forEach(eventName => dropArea.addEventListener(eventName, () => dropArea.classList.add('highlight'), false));
        ['dragleave', 'drop'].forEach(eventName => dropArea.addEventListener(eventName, () => dropArea.classList.remove('highlight'), false));

        dropArea.addEventListener('drop', handleDrop, false);
        function handleDrop(e) {
            fileInput.files = e.dataTransfer.files;
            updateFileListPreview();
        }

        fileInput.addEventListener('change', updateFileListPreview);
        function updateFileListPreview() {
            fileListPreview.innerHTML = '';
            if (fileInput.files.length > 0) {
                const list = document.createElement('ul');
                list.style.listStyleType = 'none'; list.style.paddingLeft = '0';
                for (let i = 0; i < fileInput.files.length; i++) {
                    const listItem = document.createElement('li');
                    listItem.textContent = fileInput.files[i].name;
                    listItem.style.fontSize = '0.9em'; listItem.style.color = '#333';
                    list.appendChild(listItem);
                }
                fileListPreview.appendChild(list);
                uploadButton.style.display = 'inline-block';
            } else {
                uploadButton.style.display = 'none';
            }
        }
        if(fileInput.files.length === 0) uploadButton.style.display = 'none';
    </script>
</body>
</html>
